{{$tableComment:=.table.TableComment}}
<template>
    <div class="app-container">
        <el-form ref="queryForm" :model="queryParams" :inline="true" label-width="68px" >
            {{range $index, $column := .table.Columns}}
            {{ $x := $column.IsQuery }}
            {{ if eq $x "1"}}
            <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.GoField}}">
                <el-input v-model="queryParams.{{$column.GoField}}" placeholder="请输入{{$column.ColumnComment}}" clearable size="small" @keyup.enter.native="handleQuery" />
            </el-form-item>
            {{end}}
            {{ end }}
            <el-form-item>
                <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
                <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
            </el-form-item>
        </el-form>

        <el-row :gutter="10" class="mb8">
            <el-col :span="1.5">
                <el-button
                        type="primary"
                        icon="el-icon-plus"
                        size="mini"
                        @click="handleAdd"
                >新增</el-button>
            </el-col>
            <el-col :span="1.5">
                <el-button
                        type="success"
                        icon="el-icon-edit"
                        size="mini"
                        :disabled="single"
                        @click="handleUpdate"
                >修改</el-button>
            </el-col>
            <el-col :span="1.5">
                <el-button
                        type="danger"
                        icon="el-icon-delete"
                        size="mini"
                        :disabled="multiple"
                        @click="handleDelete"
                >删除</el-button>
            </el-col>
        </el-row>

        {{if eq .table.TplCategory "crud"}}
        <!--单表-->
        <el-table v-loading="loading" :data="{{.table.ModuleName}}List" @selection-change="handleSelectionChange">
            <el-table-column type="selection" width="55" align="center" />
            {{range $index,$column:=.table.Columns}}
            {{ $x := $column.IsList }}
            {{ if eq $x "1"}}
                <el-table-column label="{{$column.ColumnComment}}" align="center" prop="{{$column.GoField}}" :show-overflow-tooltip="true" />
            {{- end }}
            {{- end }}
            <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
                <template slot-scope="scope">
                    <el-button
                            size="mini"
                            type="text"
                            icon="el-icon-edit"
                            @click="handleUpdate(scope.row)"
                    >修改</el-button>
                    <el-button
                            size="mini"
                            type="text"
                            icon="el-icon-delete"
                            @click="handleDelete(scope.row)"
                    >删除</el-button>
                </template>
            </el-table-column>
        </el-table>

        <pagination
                        v-show="total>0"
                        :total="total"
                        :page.sync="queryParams.pageIndex"
                        :limit.sync="queryParams.pageSize"
                        @pagination="getList"
                />

        {{else}}
        <!--树形菜单-->
        <el-table
              v-loading="loading"
              :data="deptList"
              row-key="deptId"
              default-expand-all
              :tree-props="{children: 'children', hasChildren: 'hasChildren'}"
            >
               {{range $index,$column:=.table.Columns}}
                   {{ $x := $column.IsList }}
                   {{ if eq $x "1"}}
                       <el-table-column label="{{$column.ColumnComment}}" align="center" prop="{{$column.GoField}}" :show-overflow-tooltip="true" />
                   {{- end }}
               {{- end }}
              <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
                <template slot-scope="scope">
                  <el-button
                    size="mini"
                    type="text"
                    icon="el-icon-edit"
                    @click="handleUpdate(scope.row)"

                  >修改</el-button>
                  <el-button
                    size="mini"
                    type="text"
                    icon="el-icon-plus"
                    @click="handleAdd(scope.row)"

                  >新增</el-button>
                  <el-button
                    v-if="scope.row.parentId != 0"
                    size="mini"
                    type="text"
                    icon="el-icon-delete"
                    @click="handleDelete(scope.row)"

                  >删除</el-button>
                </template>
              </el-table-column>
            </el-table>
        {{end}}

        <!-- 添加或修改对话框 -->
        <el-dialog :title="title" :visible.sync="open" width="500px">
            <el-form ref="form" :model="form" :rules="rules" label-width="80px">
                {{ range  $index,$column:=.table.Columns }}
                {{ $x := $column.IsInsert }}
                {{ if eq $x "1"}}
                    {{ if eq $column.IsPk "1" }}
                    {{else if eq $column.GoField "CreatedAt" }}
                    {{else if eq $column.GoField "UpdatedAt" }}
                    {{else if eq $column.GoField "DeletedAt" }}
                    {{else if eq $column.GoField "UpdateBy" }}
                    {{else if eq $column.GoField "CreateBy" }}
                    {{else }}
                <el-form-item label="{{$column.ColumnComment}}" prop="{{$column.GoField}}"  >
                {{ if eq "input" $column.HtmlType }}
                    <el-input v-model="form.{{$column.GoField}}" placeholder="{{$column.ColumnComment}}"  {{if eq $column.IsEdit "false" }}:disabled="isEdit"  {{ end}}/>
                {{ else if eq "select" $column.HtmlType }}
                    <el-select v-model="form.{{$column.GoField}}"  {{if eq $column.IsEdit "false" }} :disabled="isEdit" {{end }}>
                        <el-option label="demo1" value="demo1" />
                        <el-option label="demo2" value="demo2" />
                    </el-select>
                {{else if eq "radio" $column.HtmlType }}
                    <el-radio-group v-model="form.{{$column.GoField}}">
                        <el-radio
                                v-for="dict in {{$column.GoField}}Options"
                                :key="dict.dictValue"
                                :label="dict.dictValue"
                        >{{"{{"}} dict.dictLabel {{"}}"}}</el-radio>
                    </el-radio-group>
                {{ end }}
                </el-form-item>
                    {{ end }}
                {{ end }}
                {{ end }}
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button type="primary" @click="submitForm">确 定</el-button>
                <el-button @click="cancel">取 消</el-button>
            </div>
        </el-dialog>
    </div>
</template>


<script>
    import { list{{.table.BusinessName|UcFirst}}, get{{.table.BusinessName|UcFirst}}, del{{.table.BusinessName|UcFirst}}, add{{.table.BusinessName|UcFirst}}, update{{.table.BusinessName|UcFirst}} } from '@/api/{{.table.ModuleName}}/{{.table.BusinessName}}'

    export default {
        name: 'Config',
        data() {
            return {
                // 遮罩层
                loading: true,
                // 选中数组
                ids: [],
                // 非单个禁用
                single: true,
                // 非多个禁用
                multiple: true,
                // 总条数
                total: 0,
                // 弹出层标题
                title: '',
                // 是否显示弹出层
                open: false,
                isEdit: false,
                // 类型数据字典
                typeOptions: [],

                // 查询参数
                queryParams: {
                    pageIndex: 1,
                    pageSize: 10,
                    {{ range $index,$column:=.table.Columns }}
                    {{if eq $column.IsQuery "1"}}
                    {{$column.GoField}}:undefined,
                    {{ end }}
                    {{ end }}
                },
                // 表单参数
                form: {
                },
                // 表单校验
                rules: {
                    {{range $index,$column :=.table.Columns }}
                    {{ $x := $column.IsQuery }}
                    {{ if eq $x "1"}}
                    {{$column.GoField}}:
                    [
                        {required: true, message: '{{$column.ColumnComment}}不能为空', trigger: 'blur'}
                    ],
                    {{ end }}
                    {{ end }}
                }
            }
        },
        created() {
            this.getList()
            {{range $index,$column:=.table.Columns}}
            {{ if ne $column.DictType "" }}
            this.getDicts('{{$column.DictType}}').then(response => {
                this.{{$column.GoField}}Options = response.data
            })
            {{ end }}
            {{ end }}
        },
        methods: {
            /** 查询参数列表 */
            getList() {
                this.loading = true
                list{{.table.ModuleName|UcFirst}}(this.addDateRange(this.queryParams, this.dateRange)).then(response => {
                        this.{{.table.ModuleName}}List = response.data.list
                        this.total = response.data.count
                        this.loading = false
                    }
                )
            },
            // 取消按钮
            cancel() {
                this.open = false
                this.reset()
            },
            // 表单重置
            reset() {
                this.form = {
                {{ range  $index,$column:=.table.Columns}}
                {{ $x := $column.IsInsert }}
                {{ if eq  $x "1"}}
                {{if eq $column.GoField "CreatedAt" }}
                {{else if eq $column.GoField "UpdatedAt" }}
                {{else if eq $column.GoField "DeletedAt" }}
                {{else if eq $column.GoField "UpdateBy" }}
                {{else if eq $column.GoField "CreateBy" }}
                {{else }}
                {{$column.GoField}}: undefined,
                {{ end }}
                {{ end }}
                {{ end }}
                }
                this.resetForm('form')
            },
            {{$pk:=""}}
            {{ range  $index,$column:=.table.Columns}}
            {{if eq $column.IsPk "1"}}
            {{$pk =$column.GoField}}
            {{end}}
            {{ if ne $column.DictType "" }}
            {{$column.GoField}}Format(row) {
                return this.selectDictLabel(this.{{$column.GoField}}Options, row.{{$column.GoField}})
            },
            {{ end }}
            {{ end }}

            /** 搜索按钮操作 */
            handleQuery() {
                this.queryParams.pageIndex = 1
                this.getList()
            },
            /** 重置按钮操作 */
            resetQuery() {
                this.dateRange = []
                this.resetForm('queryForm')
                this.handleQuery()
            },
            /** 新增按钮操作 */
            handleAdd() {
                this.reset()
                this.open = true
                this.title = '添加{{.table.TableComment}}'
                this.isEdit = false
            },
            // 多选框选中数据
            handleSelectionChange(selection) {
                this.ids = selection.map(item => item.{{$pk}}
                this.single = selection.length !== 1
                this.multiple = !selection.length
            },
            /** 修改按钮操作 */
            handleUpdate(row) {
                this.reset()
                const {{$pk}} = row.{{$pk}} || this.ids
                get{{.table.ModuleName|UcFirst}}({{$pk}}).then(response => {
                    this.form = response.data
                    this.open = true
                    this.title = '修改{{.table.TableComment}}'
                    this.isEdit = true
                })
            },
            /** 提交按钮 */
            submitForm: function() {
                this.$refs['form'].validate(valid => {
                    if (valid) {
                        if (this.form.{{$pk}} !== undefined) {
                            update{{.table.ModuleName|UcFirst}}(this.form).then(response => {
                                if (response.code === 200) {
                                    this.msgSuccess('修改成功')
                                    this.open = false
                                    this.getList()
                                } else {
                                    this.msgError(response.msg)
                                }
                            })
                        } else {
                            add{{.table.ModuleName|UcFirst}}(this.form).then(response => {
                                if (response.code === 200) {
                                    this.msgSuccess('新增成功')
                                    this.open = false
                                    this.getList()
                                } else {
                                    this.msgError(response.msg)
                                }
                            })
                        }
                    }
                })
            },
            /** 删除按钮操作 */
            handleDelete(row) {
                const Ids = row.{{.PkJsonField}} || this.ids
                this.$confirm('是否确认删除编号为"' + Ids + '"的数据项?', '警告', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(function() {
                    return del{{.table.ModuleName|UcFirst}}(Ids)
                }).then(() => {
                    this.getList()
                    this.msgSuccess('删除成功')
                }).catch(function() {})
            }
        }
    }
</script>